---
branches:
  -
    name: main
    prerelease: false
tagFormat: "${version}"
plugins:
  - "@semantic-release/commit-analyzer"
  - "@semantic-release/release-notes-generator"
  - "@semantic-release/changelog"
  - "@semantic-release/git"
  - "@semantic-release/exec"
  - ["@semantic-release/github"]

verifyConditions:
  - '@semantic-release/changelog'
  - '@semantic-release/git'
  - "@semantic-release/github"

analyzeCommits:
  - path: '@semantic-release/commit-analyzer'
    preset: conventionalcommits
    # Determine the type of release by analyzing commits with conventional-changelog
    releaseRules:
      - breaking: true
        release: major
      - type: build     # Changes that affect the build system or external dependencies
        # (example scopes: gulp, broccoli, npm)
        release: patch
      - type: chore     # Other changes that don't modify src or test files
        release: false
      - type: ci        # Changes to our CI configuration files and scripts
        release: false
      - type: docs      # Documentation only changes
        release: patch
      - type: feat      # A new feature
        release: minor
      - type: fix       # A bug fix
        release: patch
      - type: perf      # A code change that improves performance
        release: patch
      - type: refactor  # A code change that neither fixes a bug nor adds a feature
        release: false
      - type: revert    # Reverts a previous commit
        release: patch
      - type: style     # Changes that do not affect the meaning of the code
        # (white-space, formatting, missing semi-colons, etc)
        release: false
      - type: test      # Adding missing tests or correcting existing tests
        release: false

generateNotes:
  - path: '@semantic-release/release-notes-generator'
    preset: conventionalcommits
    writerOpts:
      groupBy: 'type'
      commitGroupsSort: 'title'
      commitsSort: 'header'
    linkCompare: true
    linkReferences: true
    presetConfig:
      types:  # looks like it only works with 'conventionalcommits' preset
        - type: 'build'
          section: '🦊 CI/CD'
          hidden: false
        - type: 'chore'
          section: 'Other'
          hidden: false
        - type: 'ci'
          section: '🦊 CI/CD'
          hidden: false
        - type: 'docs'
          section: '📔 Docs'
          hidden: false
        - type: 'example'
          section: '📝 Examples'
          hidden: false
        - type: 'feat'
          section: '🚀 Features'
          hidden: false
        - type: 'fix'
          section: '🛠 Fixes'
          hidden: false
        - type: 'perf'
          section: '⏩ Performance'
        - type: 'refactor'
          section: ':scissors: Refactor'
          hidden: false
        - type: 'revert'
          section: '🙅‍♂️ Reverts'
        - type: 'style'
          section: '💈 Style'
        - type: 'test'
          section: '🧪 Tests'
          hidden: false

prepare:
  - path: "@semantic-release/exec"
    cmd: "export NEXTVERSION=${nextRelease.version} .github/bump-release.sh"
  - path: "@semantic-release/changelog"
    changelogFile: "docs/CHANGELOG.md"
  - path: "@semantic-release/git"
    assets:
      - "docs/CHANGELOG.md"
      - "README.md"

publish:
  - path: '@semantic-release/github'
    assets:
      -
        path: "./msdcli-amd64"
        label: "Linux amd64"

success:
  - path: "@semantic-release/github"

fail:
  - path: "@semantic-release/github"
